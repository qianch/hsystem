import javax.print.Doc;
import javax.print.DocFlavor;
import javax.print.DocPrintJob;
import javax.print.PrintException;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.print.SimpleDoc;


/**
 * @author Goofy 252887950@qq.com <a href="http://www.xdemo.org">www.xdemo.org</a>
 * @Date 2017年11月1日 上午11:07:03
 */
public class ZplPrint {
	public static void main(String[] args) {
		for (int j = 0; j < 1; j++) {
			long x = System.currentTimeMillis();
			String i = j + "fdsa345";

			PrintService printService = null;
			PrintService[] services = PrintServiceLookup.lookupPrintServices(null, null);
			if (services != null && services.length > 0) {
				for (PrintService service : services) {
					if ("test".equals(service.getName())) {
						printService = service;
						break;
					}
				}
			}
			DocPrintJob job = printService.createPrintJob();
			StringBuffer sb = new StringBuffer();

			sb.append("^XA~TA000~JSN^LT0^MNW^MTD^PON^PMN^LH0,0^JMA^PR4,4~SD15^JUS^LRN^CI0^XZ^XA^MMT^PW1205^LL0402^LS0^FO0,0^GFA,63232,63232,00152,:Z64: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:D70C^PQ1,0,1,Y^XZ");

			byte[] by = sb.toString().getBytes();
			DocFlavor flavor = DocFlavor.BYTE_ARRAY.AUTOSENSE;
			Doc doc = new SimpleDoc(by, flavor, null);
			try {
				job.print(doc, null);
				System.out.println("已打印");
			} catch (PrintException e) {
				e.printStackTrace();
			}
			long y = System.currentTimeMillis();
			System.out.println((y - x) + "ms");
		}
	}
}
